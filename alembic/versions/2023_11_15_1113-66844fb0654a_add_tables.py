"""add tables

Revision ID: 66844fb0654a
Revises:  # noqa: W291
Create Date: 2023-11-15 11:13:41.124750

"""
import pgvector
import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision = "66844fb0654a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "execution",
        sa.Column("db_created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column(
            "strategy",
            sa.Enum("POPULARITY", "COLLABORATIVE_FILTERING_ITEM_BASED", "SEMANTIC_SIMILARITY", name="strategytype"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "page",
        sa.Column("db_updated_at", sa.DateTime(), nullable=True),
        sa.Column("url", sa.String(), nullable=True),
        sa.Column("db_created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column(
            "article_exclude_reason",
            sa.Enum(
                "NOT_ARTICLE", "NOT_IN_HOUSE_ARTICLE", "TEST_ARTICLE", "HAS_EXCLUDED_TAG", name="articleexcludereason"
            ),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("url"),
    )
    op.create_table(
        "article",
        sa.Column("db_updated_at", sa.DateTime(), nullable=True),
        sa.Column("site", sa.String(), nullable=True),
        sa.Column("db_created_at", sa.DateTime(), nullable=False),
        sa.Column("page_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("id_in_site", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("published_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["page_id"],
            ["page.id"],
        ),
        sa.PrimaryKeyConstraint("page_id"),
        sa.UniqueConstraint("site", "id_in_site"),
    )
    op.create_table(
        "embedding",
        sa.Column("vector", pgvector.sqlalchemy.Vector(dim=384), nullable=True),
        sa.Column("db_created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("article_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("execution_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["article_id"],
            ["article.page_id"],
        ),
        sa.ForeignKeyConstraint(
            ["execution_id"],
            ["execution.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "recommendation",
        sa.Column("db_created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("execution_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("source_article_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("target_article_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["execution_id"],
            ["execution.id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_article_id"],
            ["article.page_id"],
        ),
        sa.ForeignKeyConstraint(
            ["target_article_id"],
            ["article.page_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("recommendation")
    op.drop_table("embedding")
    op.drop_table("article")
    op.drop_table("page")
    op.drop_table("execution")
    # ### end Alembic commands ###
